module 'relu
        
        f_989: cn [:mem, r32, cn [:mem, r32]] = {
            %_1056: i1 = (:RCmp_le (0∷nat, 32∷nat)) (@{f_989, 1∷i₃}, 0∷r32);
            %_1057: cn :mem = #{%_1056} (if_else_1001, if_then_1029);
            %_1059: ⊥∷★ = %_1057 MEM@{f_989};
            -> λ@(0∷i1) %_1059;
        }
            
            sca_if_join_1004: cn [:mem, r32] = {
                %_1016: ⊥∷★ = RET@{f_989} @{sca_if_join_1004};
                -> λ@(0∷i1) %_1016;
            }
            
            if_else_1001: cn :mem = {
                %_1024: ⊥∷★ = sca_if_join_1004 (@{if_else_1001}, @{f_989, 1∷i₃});
                -> λ@(0∷i1) %_1024;
            }
            
            if_then_1029: cn :mem = {
                %_1036: ⊥∷★ = sca_if_join_1004 (@{if_then_1029}, 0∷r32);
                -> λ@(0∷i1) %_1036;
            }
        
        main_939: cn [:mem, cn [:mem, i32]] = {
            %_1060: cn [:mem, r32, cn [:mem, r32, cn [:mem, r32, cn [:mem, r32]]]] = (:rev_diff ‹2∷nat; r32›) f_989;
            %_cont_1153: ⊥∷★ = %_1060 (MEM@{main_939}, 4∷r32, _cont_1068);
            -> λ@(0∷i1) %_cont_1153;
        }
            
            _cont_1068: cn [:mem, r32, cn [:mem, r32, cn [:mem, r32]]] = {
                %_cont_1151: ⊥∷★ = RET@{_cont_1068} (MEM@{_cont_1068}, 1∷r32, _cont_1081);
                -> λ@(0∷i1) %_cont_1151;
            }
                
                _cont_1081: cn [:mem, r32] = {
                    %_1126: i32 = (:Conv_r2s (4294967296∷nat, 32∷nat)) @{_cont_1081, 1∷i1};
                    %_1141: i32 = (:Conv_r2s (4294967296∷nat, 32∷nat)) @{_cont_1068, 1∷i₃};
                    %_1145: i32 = (:Wrap_mul (1∷nat, 4294967296∷nat)) (1000∷i32, %_1141);
                    %_1147: i32 = (:Wrap_add (1∷nat, 4294967296∷nat)) (%_1126, %_1145);
                    %_1149: ⊥∷★ = RET@{main_939} (MEM@{_cont_1081}, %_1147);
                    -> λ@(0∷i1) %_1149;
                }