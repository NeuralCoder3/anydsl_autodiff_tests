extern "C" {
    fn embed(&f32) -> &();
    fn reify(&()) -> f32;
    fn compute(&()) -> ();

    fn embed_diff(&f32) -> &f32;
    fn reify_diff(&()) -> ();
    fn compute_diff(f64) -> ();

    fn printFloat(f32) -> ();
    fn printDouble(f64) -> ();
    fn printInteger(i32) -> ();
    fn println(&[u8]) -> ();
}

// extern fn dummy() -> () {
//     pow_diff(1f,1f);
// };

fn f(a: f32) -> f32 {
    let x = 3f;
    let v = embed(&x);
    compute(v);
    let y = reify(v);
    y
}
fn main() -> i32 {


    // let y = 4f;
    // let v = &y;
    // let yP=0f;

    let Df = rev_diff(f);
    let x = 3f;
    let yp = Df(x);
    let y  = yp(0);
    let yP = yp(1)(1f);
    let r = y as i32;

    println("f(x)");
    printFloat(y);
    println("derivatives");
    printFloat(yP);
    0
    // x*(2x)² = 4x³, 12x²
}
