extern "C" {
    fn printFloat(f32) -> ();
    fn printDouble(f64) -> ();
    fn printInteger(i32) -> ();
    fn log(f64) -> (f64);
    fn exp(f64) -> (f64);
    fn logf(f32) -> (f32);
    fn println(&[u8]) -> ();
}


extern fn f(x: &[f32*3]) -> f32 {
    2f*x(0)+3f*x(1)
}
fn main() -> i32 {
    println("Let's get ready!");
    let mut xP = [0f,..3];
    let x = &mut xP;

    x(0)=1f;
    x(1)=2f;
    x(2)=3f;


    let Df = rev_diff(f);
    let yp = Df(x);
    let y  = yp(0);
    let yP = yp(1)(1f);
    let r = y as i32;
    let q0 = yP(0) as i32;
    let q1 = yP(1) as i32;
    let q2 = yP(2) as i32;
    println("f(x)");
    printFloat(y);
    println("derivatives");
    printFloat(yP(0));
    printFloat(yP(1));
    printFloat(yP(2));
    10000 * q0 + 100*q1 + q2
    // 1000 * r + q0 + q1
    // 2x+3y, (2,3,0)
}