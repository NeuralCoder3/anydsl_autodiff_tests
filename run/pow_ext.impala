extern "C" {
    fn pow(x:f32,y:f32) -> f32;
    fn pow_diff(x:f32, y:f32) -> (f32,f32);
    fn printFloat(f32) -> ();
    fn printDouble(f64) -> ();
    fn printInteger(i32) -> ();
    fn println(&[u8]) -> ();
}

extern fn dummy() -> () {
    pow_diff(1f,1f);
};

fn f(a: f32) -> f32 {
    a * pow(2f+a,2f)
    // 4a+4a²+a³
    // 4 + 8a+3a²
    // 3 => 75,55


    // pow(a,2f)
}
fn main() -> i32 {
    // let Df = rev_diff(f);
    // let yp = Df(2f); 
    // let y  = yp(0);
    // let yP = yp(1);
    // let r = y as i32;
    // let q = yP(1f) as i32;
    // 1000 * r + q

    let Df = rev_diff(f);
    let x = 3f;
    let yp = Df(x);
    let y  = yp(0);
    let yP = yp(1)(1f);
    let r = y as i32;

    println("f(x)");
    printFloat(y);
    println("derivatives");
    printFloat(yP);
    0
    // x*(2x)² = 4x³, 12x²
}
