fn f(x: [f32 * 2]) -> f32 {
    x(1) + x(0)
}

fn g(x0:f32,x1:f32) -> f32 {
    x1 + x0
}

fn h(x:(f32,f32)) -> f32 {
    x(0)
}

fn i(x:(f32,(f32,f32))) -> f32 {
    x(0)
}

fn j(x0:f32,x1:(f32,f32)) -> f32 {
    x0
}

fn k(x:f32,u:()) -> f32 {
    x
}

fn main() -> i32 {
    let p = (2,3);
    let q = [4,5];
    let p2 = (6f,7f);
    let q2 = [8f,9f];
    let s = f(q2)+g(1f,2f)+h(p2)
    +i((1f,(2f,3f)))+j(1f,(2f,3f))+k(2f,())
    ;
   42+p(0)+q(0)
}
