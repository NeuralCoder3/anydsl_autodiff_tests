fn f(x: [f32*3]) -> [f32*2] {
    let x1 = x(0);
    let x2 = x(1);
    let x3 = x(2);
    [x1+x3,x2*x3]
}
fn main() -> i32 {
    let Df = rev_diff(f);
    let yp = Df([2f,3f,4f]);
    let y  = yp(0);
    let yP = yp(1)([0f,1f]);
    let r0 = y(0) as i32;
    let r1 = y(1) as i32;
    let q0 = yP(0) as i32;
    let q1 = yP(1) as i32;
    let q2 = yP(2) as i32;
    10000 * q0 + 100*q1 + q2
    // (x1+x3,x2*x3), (s0*(1,0,1)+s1*(0,x3,x2))
    // (6,12), (1,0,1), (0,4,3)
}
