fn f(a: &f32) -> f32 {
    2f * (*a)
    // converted to rvalue(*a,f32)
}
fn main() -> i32 {
    let Df = rev_diff(f);
    let x = 4f;
    let yp = Df(x); // converted to &x
    let y  = yp(0);
    let yP = yp(1);
    let r = y as i32;
    let ypp :f32 = *(yP(1f));
    let q = ypp as i32;
    1000 * r + q

    // let x = 4f;
    // let _ = f(x);
    // 42
}
