fn f(x: [(f32,i32,f32)*2]) -> f32 {
    // let y = x(0);
    let a = x(0)(0);
    let c = x(0)(2);
    3f*a+c*c
}
fn main() -> i32 {
    let Df = rev_diff(f);
    // let x0=(4f,5,2f);
    let x = [(4f,5,2f),(0f,0,0f)];
    let yp = Df(x);
    let y  = yp(0);
    let yP = yp(1)(1f);
    let r = y as i32;
    let ypp = yP(0);
    let q0 = ypp(0) as i32;
    let q1 = ypp(2) as i32;
    10000 * r + 100*q0 + q1
    // r
    // 3x+zÂ²; (3,0,2z)
    // 12+4=16, (3,0,4)
}
