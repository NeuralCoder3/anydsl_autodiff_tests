fn f(a: &mut f32) -> f32 {
    let b = *a;
    if((*a)<=3f) {
        *a=b*b*b;
    }
    *a
}
fn main() -> i32 {
    let Df = rev_diff(f);
    let mut x = 2f;
    let z : &mut f32 = &x;
    let yp = Df(z);
    let y  = yp(0);
    let yP = yp(1);
    let r = y as i32;
    let ypp = *(yP(1f)); // * for ptr pb
    let q = ypp as i32;
    1000 * r + q
    // 2 => 8,12
    // 3 => 27,27
    // 4 => 4,1
}
