
module 'pow2
        
        g_3223: Cn [:mem, Cn [:mem, r32]] = { <unset> }
        
        pow_3253: Cn [:mem, r32, i32, Cn [:mem, r32]]: (mem_3309, a_3337, b_3365, return_3400) = {
            _3628: i1 = :ICmp_sle 4294967296∷nat (b_3365, 0∷i32);
            _3653: ⊥∷★ = (if_else_3507, if_then_3477)#_3628 mem_3309;
            λ@(1∷i1) _3653
        }
            
            if_join_3539: Cn [:mem, r32]: (mem_3558, _3995) = {
                _4017: ⊥∷★ = return_3400 @if_join_3539;
                λ@(0∷i1) _4017
            }
            
            pow_cont_3883: Cn [:mem, r32]: (mem_3902, pow_3912) = {
                _3958: r32 = :ROp_mul (0∷nat, 32∷nat) (a_3337, pow_3912);
                _3981: ⊥∷★ = if_join_3539 (mem_3902, _3958);
                λ@(0∷i1) _3981
            }
            
            if_else_3507: Cn :mem: _3702 = {
                _3818: i32 = :Wrap_add (1∷nat, 4294967296∷nat) (4294967295∷i32, b_3365);
                pow_cont_3905: ⊥∷★ = pow_3253 (_3702, a_3337, _3818, pow_cont_3883);
                λ@(0∷i1) pow_cont_3905
            }
            
            if_then_3477: Cn :mem: _3654 = {
                _3701: ⊥∷★ = if_join_3539 (_3654, 1∷r32);
                λ@(0∷i1) _3701
            }
        
        main_3284: Cn [:mem, Cn [:mem, i32]]: (mem_4036, return_4071) = {
            g_cont_4400: ⊥∷★ = g_3223 (mem_4036, g_cont_4378);
            λ@(0∷i1) g_cont_4400
        }
            
            _cont_4570: Cn [:mem, r32, Cn [:mem, r32, Cn [:mem, r32, r64]]]: (mem_4589, _4603, _4610) = {
                _cont_4838: ⊥∷★ = _4610 (mem_4589, 1∷r32, _cont_4816);
                λ@(0∷i1) _cont_4838
            }
                
                _cont_4816: Cn [:mem, r32, r64]: (mem_4835, _4849, _4856) = {
                    _4990: i32 = :Conv_r2s (4294967296∷nat, 32∷nat) _4849;
                    _4912: i32 = :Conv_r2s (4294967296∷nat, 32∷nat) _4603;
                    _5070: i32 = :Wrap_mul (1∷nat, 4294967296∷nat) (1000∷i32, _4912);
                    _5081: i32 = :Wrap_add (1∷nat, 4294967296∷nat) (_4990, _5070);
                    _5104: ⊥∷★ = return_4071 (mem_4835, _5081);
                    λ@(0∷i1) _5104
                }
            
            g_cont_4378: Cn [:mem, r32]: (mem_4397, g_4407) = {
                _cont_4592: ⊥∷★ = :rev_diff (Cn [:mem, r32, i32, Cn [:mem, r32]], Cn [:mem, r32, i32, Cn [:mem, r32, Cn [:mem, r32, Cn [:mem, r32, r64]]]]) pow_3253 (mem_4397, g_4407, 3∷i32, _cont_4570);
                λ@(0∷i1) _cont_4592
            }







module 'pow2
        
        g_3223: Cn [:mem, Cn [:mem, r32]] = { <unset> }
        
        param_id_6233: Cn [:mem, r32, r64, Cn [:mem, r32, r64]]: (_6293, _6307, _6314, _6326) = {
            _6329: ⊥∷★ = _6326 (_6293, _6307, _6314);
            λ@(1∷i1) _6329
        }
        
        extract_pb_6462: Cn [:mem, r32, Cn [:mem, r32, r64]]: (_6550, _6608, _6587) = {
            _6700: ⊥∷★ = param_id_6233 (_6550, _6608, 0∷r64, _6587);
            λ@(1∷i1) _6700
        }
        
        zero_pb_lit_9848: Cn [:mem, r64, Cn [:mem, r32, r64]]: (_9873, _21729, _9893) = {
            _9896: ⊥∷★ = _9893 (_9873, 0∷r32, 0∷r64);
            λ@(1∷i1) _9896
        }
        
        tuple_pb_15835: Cn [:mem, r32, r64, Cn [:mem, r32, r64]]: (_15895, s_15945, s_16520, _17069) = {
            _15906: ⊥∷★ = tuple_sum_pb_15876 (_15895, 0∷r32, 0∷r64);
            λ@(1∷i1) _15906
        }
            
            tuple_sum_pb_16593: Cn [:mem, r32, r64]: (_21817, _21822, _21827) = {
                _17070: ⊥∷★ = _17069 @tuple_sum_pb_16593;
                λ@(1∷i1) _17070
            }
            
            tuple_sum_pb_16018: Cn [:mem, r32, r64]: (_16561, _16656, _16663) = {
                _16571: ⊥∷★ = zero_pb_lit_9848 (_16561, s_16520, res_pb_16542);
                λ@(1∷i1) _16571
            }
                
                res_pb_16542: Cn [:mem, r32, r64]: (_17048, _16620, _16627) = {
                    _17056: ⊥∷★ = sum_pb_16694 _17048;
                    λ@(1∷i1) _17056
                }
                    
                    tuple_add_cont_16747: Cn [:mem, r32]: (_17001, _16850) = {
                        _17009: ⊥∷★ = sum_pb_16932 _17001;
                        λ@(1∷i1) _17009
                    }
                        
                        tuple_add_cont_16891: Cn [:mem, r64]: (_17016, _16994) = {
                            _17029: ⊥∷★ = tuple_sum_pb_16593 (_17016, _16850, _16994);
                            λ@(1∷i1) _17029
                        }
                        
                        sum_pb_16932: Cn :mem: _16949 = {
                            _16964: r64 = :ROp_add (0∷nat, 64∷nat) (_16627, _16663);
                            _16967: ⊥∷★ = tuple_add_cont_16891 (_16949, _16964);
                            λ@(1∷i1) _16967
                        }
                    
                    sum_pb_16788: Cn :mem: _16805 = {
                        _16820: r32 = :ROp_add (0∷nat, 32∷nat) (_16620, _16656);
                        _16823: ⊥∷★ = tuple_add_cont_16747 (_16805, _16820);
                        λ@(1∷i1) _16823
                    }
                    
                    sum_pb_16694: Cn :mem: _16851 = {
                        _16855: ⊥∷★ = sum_pb_16788 _16851;
                        λ@(1∷i1) _16855
                    }
            
            tuple_sum_pb_15876: Cn [:mem, r32, r64]: (_15986, _16081, _16088) = {
                _15996: ⊥∷★ = extract_pb_6462 (_15986, s_15945, res_pb_15967);
                λ@(1∷i1) _15996
            }
                
                res_pb_15967: Cn [:mem, r32, r64]: (_16473, _16045, _16052) = {
                    _16481: ⊥∷★ = sum_pb_16119 _16473;
                    λ@(1∷i1) _16481
                }
                    
                    tuple_add_cont_16172: Cn [:mem, r32]: (_16426, _16275) = {
                        _16434: ⊥∷★ = sum_pb_16357 _16426;
                        λ@(1∷i1) _16434
                    }
                        
                        tuple_add_cont_16316: Cn [:mem, r64]: (_16441, _16419) = {
                            _16454: ⊥∷★ = tuple_sum_pb_16018 (_16441, _16275, _16419);
                            λ@(1∷i1) _16454
                        }
                        
                        sum_pb_16357: Cn :mem: _16374 = {
                            _16389: r64 = :ROp_add (0∷nat, 64∷nat) (_16052, _16088);
                            _16392: ⊥∷★ = tuple_add_cont_16316 (_16374, _16389);
                            λ@(1∷i1) _16392
                        }
                    
                    sum_pb_16213: Cn :mem: _16230 = {
                        _16245: r32 = :ROp_add (0∷nat, 32∷nat) (_16045, _16081);
                        _16248: ⊥∷★ = tuple_add_cont_16172 (_16230, _16245);
                        λ@(1∷i1) _16248
                    }
                    
                    sum_pb_16119: Cn :mem: _16276 = {
                        _16280: ⊥∷★ = sum_pb_16213 _16276;
                        λ@(1∷i1) _16280
                    }
        
        zero_pb_lit_18399: Cn [:mem, r32, Cn [:mem, r32, r64]]: (_18424, _22350, _18444) = {
            _18447: ⊥∷★ = _18444 (_18424, 0∷r32, 0∷r64);
            λ@(1∷i1) _18447
        }
        
        top_level_rev_diff_pow_6066: Cn [:mem, r32, i32, Cn [:mem, r32, Cn [:mem, r32, Cn [:mem, r32, r64]]]]: (_6145, _6260, _6267, _6388) = {
            _9242: i1 = :ICmp_sle 4294967296∷nat (_6267, 0∷i32);
            _20751: ⊥∷★ = (if_else_9316, if_then_18213)#_9242 _6145;
            λ@(1∷i1) _20751
        }
            
            if_join_14360: Cn [:mem, r32, Cn [:mem, r32, Cn [:mem, r32, r64]]]: (_14445, _22467, _14423) = {
                _15235: ⊥∷★ = _6388 @if_join_14360;
                λ@(0∷i1) _15235
            }
            
            pow_cont_11288: Cn [:mem, r32, Cn [:mem, r32, Cn [:mem, r32, r64]]]: (_11373, pow_12018, _11351) = {
                _13691: r32 = :ROp_mul (0∷nat, 32∷nat) (_6260, pow_12018);
                _15504: ⊥∷★ = if_join_14360 (_11373, _13691, φ*_13646);
                λ@(0∷i1) _15504
            }
                
                extract_pb_12050: Cn [:mem, r32, Cn [:mem, r32, r64]]: (_12132, _12190, _12169) = {
                    _12278: ⊥∷★ = _11351 @extract_pb_12050;
                    λ@(1∷i1) _12278
                }
                
                φ*_13646: Cn [:mem, r32, Cn [:mem, r32, r64]]: (_13716, _13730, _13865) = {
                    _13742: r32 = :ROp_mul (0∷nat, 32∷nat) (pow_12018, _13730);
                    _13745: ⊥∷★ = extract_pb_6462 (_13716, _13742, φmiddle_13664);
                    λ@(1∷i1) _13745
                }
                    
                    φmiddle_13664: Cn [:mem, r32, r64]: (_13752, _13808, _13815) = {
                        _13778: r32 = :ROp_mul (0∷nat, 32∷nat) (_6260, _13730);
                        _13781: ⊥∷★ = extract_pb_12050 (_13752, _13778, φend_13679);
                        λ@(1∷i1) _13781
                    }
                        
                        φend_13679: Cn [:mem, r32, r64]: (_14230, _13844, _13851) = {
                            _14238: ⊥∷★ = sum_pb_13888 _14230;
                            λ@(1∷i1) _14238
                        }
                            
                            tuple_add_cont_13941: Cn [:mem, r32]: (_14195, _14044) = {
                                _14203: ⊥∷★ = sum_pb_14126 _14195;
                                λ@(1∷i1) _14203
                            }
                                
                                tuple_add_cont_14085: Cn [:mem, r64]: (_14210, _14188) = {
                                    _14223: ⊥∷★ = _13865 (_14210, _14044, _14188);
                                    λ@(1∷i1) _14223
                                }
                                
                                sum_pb_14126: Cn :mem: _14143 = {
                                    _14158: r64 = :ROp_add (0∷nat, 64∷nat) (_13815, _13851);
                                    _14161: ⊥∷★ = tuple_add_cont_14085 (_14143, _14158);
                                    λ@(1∷i1) _14161
                                }
                            
                            sum_pb_13982: Cn :mem: _13999 = {
                                _14014: r32 = :ROp_add (0∷nat, 32∷nat) (_13808, _13844);
                                _14017: ⊥∷★ = tuple_add_cont_13941 (_13999, _14014);
                                λ@(1∷i1) _14017
                            }
                            
                            sum_pb_13888: Cn :mem: _14045 = {
                                _14049: ⊥∷★ = sum_pb_13982 _14045;
                                λ@(1∷i1) _14049
                            }
            
            φchain_17504: Cn [:mem, r32, Cn [:mem, r32, Cn [:mem, r32, r64]]]: (_17910, _17974, _17662) = {
                _17977: ⊥∷★ = pow_cont_11288 (_17910, _17974, chain_17732);
                λ@(1∷i1) _17977
            }
                
                chain_17732: Cn [:mem, r32, Cn [:mem, r32, r64]]: (_17758, _17816, _17795) = {
                    _17819: ⊥∷★ = _17662 (_17758, _17816, chain_2_17751);
                    λ@(1∷i1) _17819
                }
                    
                    chain_2_17751: Cn [:mem, r32, r64]: (_17826, _17860, _17867) = {
                        _17885: ⊥∷★ = tuple_pb_15835 (_17826, _17860, _17867, _17795);
                        λ@(1∷i1) _17885
                    }
            
            if_else_9316: Cn :mem: _9329 = {
                _11221: i32 = :Wrap_add (1∷nat, 4294967296∷nat) (4294967295∷i32, _6267);
                _20916: ⊥∷★ = top_level_rev_diff_pow_6066 (_9329, _6260, _11221, φchain_17504);
                λ@(0∷i1) _20916
            }
            
            if_then_18213: Cn :mem: _18226 = {
                _18682: ⊥∷★ = if_join_14360 (_18226, 1∷r32, zero_pb_lit_18399);
                λ@(0∷i1) _18682
            }
        
        main_3284: Cn [:mem, Cn [:mem, i32]]: (mem_4036, return_4071) = {
            g_cont_4400: ⊥∷★ = g_3223 (mem_4036, g_cont_4378);
            λ@(0∷i1) g_cont_4400
        }
            
            _cont_4570: Cn [:mem, r32, Cn [:mem, r32, Cn [:mem, r32, r64]]]: (mem_4589, _4603, _4610) = {
                _cont_4838: ⊥∷★ = _4610 (mem_4589, 1∷r32, _cont_4816);
                λ@(0∷i1) _cont_4838
            }
                
                _cont_4816: Cn [:mem, r32, r64]: (mem_4835, _4849, _4856) = {
                    _4990: i32 = :Conv_r2s (4294967296∷nat, 32∷nat) _4849;
                    _4912: i32 = :Conv_r2s (4294967296∷nat, 32∷nat) _4603;
                    _5070: i32 = :Wrap_mul (1∷nat, 4294967296∷nat) (1000∷i32, _4912);
                    _5081: i32 = :Wrap_add (1∷nat, 4294967296∷nat) (_4990, _5070);
                    _5104: ⊥∷★ = return_4071 (mem_4835, _5081);
                    λ@(0∷i1) _5104
                }
            
            g_cont_4378: Cn [:mem, r32]: (mem_4397, g_4407) = {
                _cont_20788: ⊥∷★ = top_level_rev_diff_pow_6066 (mem_4397, g_4407, 3∷i32, _cont_4570);
                λ@(0∷i1) _cont_20788
            }


Finished AutoDiff Opti








module 'pow2
        
        g_37998: Cn [:mem, Cn [:mem, r32]] = { <unset> }
        
        main_37971: Cn [:mem, Cn [:mem, i32]]: (mem_38001, return_38016) = {
            g_cont_38359: ⊥∷★ = g_37998 (mem_38001, g_cont_38002);
            λ@(0∷i1) g_cont_38359
        }
            
            return_38013: Cn [:mem, i32]: (_38512, _38517) = {
                return_38018: ⊥∷★ = return_38016 @return_38013;
                λ@(0∷i1) return_38018
            }
            
g_cont_37968: Cn [:mem, r32]: (mem_38021, x) = {
    x²: r32 = :ROp_mul (0∷nat, 32∷nat) (x, x);
    x³: r32 = :ROp_mul (0∷nat, 32∷nat) (x, x²);
    // out x³=x*(x*x) as y

    2x²: r32 = :ROp_add (0∷nat, 32∷nat) (x², x²);
    3x²: r32 = :ROp_add (0∷nat, 32∷nat) (x², 2x²);
    // out 3x² as gradient

    _38290: i32 = :Conv_r2s (4294967296∷nat, 32∷nat) x³;
    _38302: i32 = :Wrap_mul (1∷nat, 4294967296∷nat) (1000∷i32, _38290);

    _38349: i32 = :Conv_r2s (4294967296∷nat, 32∷nat) 3x²;
    _38355: i32 = :Wrap_add (1∷nat, 4294967296∷nat) (_38302, _38349);

    out ⊥∷★ = return_38016 (mem_38021, ...);
    λ@(0∷i1) out
}


