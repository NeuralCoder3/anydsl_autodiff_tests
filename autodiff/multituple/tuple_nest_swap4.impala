fn f(args_arr:[([f32*2],i32)*2]) -> f32 {
    let args = args_arr(0);
    let x1 = args(1);
    let x20 = args(0)(0);
    let x21 = args(0)(1);
    5f*x20*x21
    // if(x1<10) {
    //     2f*(x20*x20*x21)
    // }else{
    //     3f*(x20)
    // }
}
fn main() -> i32 {
    let Df = rev_diff(f);
    let x = ([3f,2f],5);
    let yp = Df([x,x]);
    let y  = yp(0);
    let pb = yp(1);
    let Gf = pb(1f);
    let arr_arg_grad = Gf(0);
    let arg_grad = arr_arg_grad(0);
    let arr_grad = arg_grad(0);

    let x1_grad = arr_grad(0);
    let x2_grad = arr_grad(1);
    // 42
    let r = y as i32;
    let q1 = x1_grad as i32;
    let q2 = x2_grad as i32;
    10000 * r + 100* q1 + q2
    // 2xÂ², 4x
    // 18, 12

    // 3x, 3
    // 9,3
}
