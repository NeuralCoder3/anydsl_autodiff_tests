// fn f(args:[(i32, [f32*2])*2]) -> f32 {
fn f(args:(i32, [f32*2])) -> f32 {
    let x1 = args(0);
    let x20 = args(1)(0);
    let x21 = args(1)(1);
    3f*x21
    // if(x1<10) {
    //     2f*(x20*x20*x21)
    // }else{
    //     3f*(x20)
    // }
}
fn main() -> i32 {
    let Df = rev_diff(f);
    let yp = Df((5,[3f,2f]));
    let y  = yp(0);
    let pb = yp(1);
    let Gf = pb(1f);
    let arg_grad = Gf(0);
    let arr_grad = arg_grad(1); // ignored in thorin
    let x_grad = arr_grad(1); // ignored
    // let x_grad = (Gf(0)(1))(0);
    // 42
    let r = y as i32;
    let q = x_grad as i32;
    1000 * r + q
    // 2xÂ², 4x
    // 18, 12

    // 3x, 3
    // 9,3
}
