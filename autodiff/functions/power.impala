fn f(x: [f32 * 2]) -> f32 {
    let a = x(0);
    let b = x(1);
    if(b<=0f) {
        1f
    }else {
        a*f([a,b-1f])
    }
}
fn main() -> i32 {
    let Df = rev_diff(f);
    let x = [2f,5f];
    let yp = Df(x);
    let y  = yp(0);
    let yP = yp(1)(1f);
    let r = y as i32;
    let q0 = yP(0) as i32;
    let q1 = yP(1) as i32;
    10000 * r + 100*q0 + q1
}
