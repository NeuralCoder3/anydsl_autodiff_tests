fn sq(a: f32) -> f32 {
    a*a
}
fn cube(a: f32) -> f32 {
    a*a*a
}
fn apply(args_arr:[(fn(f32)->f32,f32)*2]) -> f32 {
    let args = args_arr(0);
    let g = args(0);
    let a = args(1);
    g(a)
}
fn f(a: f32) -> f32 {
    let x = (cube,a);
    apply([x,x])
}
fn main() -> i32 {

    let DA = rev_diff(apply);

    let Df = rev_diff(f);
    let yp = Df(4f); 
    let y  = yp(0);
    let yP = yp(1);
    let r = y as i32;
    let q = yP(1f) as i32; 
    1000 * r + q

    // sq => x²,2x => 16,8
    // cube => x³,3x² => 64,48
}
