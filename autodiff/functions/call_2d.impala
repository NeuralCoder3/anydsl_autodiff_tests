// (x,y) ↦ (x-y)²
fn g(x: [f32 * 2]) -> f32 {
    let z1 = x(0) - x(1);
    z1*z1
}
// (x,y) ↦ x+(xy-y)²
fn f(x: [f32 * 2]) -> f32 {
    x(0)+g([x(0)*x(1),x(1)])
}
fn main() -> i32 {
    let Df = rev_diff(f);
    let x = [2f,3f];
    let yp = Df(x);
    let y  = yp(0);
    let yP = yp(1)(1f);
    let r = y as i32;
    let q0 = yP(0) as i32;
    let q1 = yP(1) as i32;
    10000 * r + 100*q0 + q1
    // x+(xy-y)², 1+2y(xy-y), 2(x-1)(xy-y)
    //        11,         19,            3
}
